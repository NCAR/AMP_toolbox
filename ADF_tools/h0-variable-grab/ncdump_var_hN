#!/usr/bin/env python3

"""
Python script to automatically grab all the variables that are floats
in a history file who's tag (hN) is provided in the arg list

This script grabs all of the specified hN files and chooses the last one in the datasaet to extract variable names via ncdump and grep
    * the actual file it is grabbing doesn't matter as long as all the h0 files in the dataset have the same variables

Args
----
 first - case name 
    * ie f.c6_3_41.FWscHIST.ne30_L58_exner.002
 second - path where case lives (*** leave out the $case/atm/hist ***)
    * /glade/scratch/hannay/archive/
 third  - type of file to process (h0,h1,etc)
 fourth (optional) - path to save the output text file
    * if not supplied, the script will place it in the current working dir

Returns
-------
  Text file with space formatted variable names to copy and paste directly into your ADF config yaml file
"""

import sys
import os
from glob import glob

if len(sys.argv) < 4:
    print("Error - not enough arguments supplied"+
    "\n USAGE: ncdump_var_hN case_name inputfile_path filetype [optional: output text file]"+
    "\n        case_name: the CESM case name "+
    "\n        inputfile_path: the path leading up to the case name (not include $case/atm/hist) "+
    "\n        required: filetype = h0, h1, etc."+
    "\n        optional: output text file in which to write the results."+
    "\n                  (Otherwise results are printed to the screen *and* a local file named $case.txt)")

case = sys.argv[1]
path = sys.argv[2]
hN   = sys.argv[3]
if len(sys.argv) == 5:
    save_path = sys.argv[4]
if len(sys.argv) == 4:
    save_path = "./"

# Check if the hN argument was given with or without the h. If the latter, add it
# Note: we should check if the result/input matches h0,h1,etc but that is left as an exercise for the (next) user
if (hN[0]!='h'):
   print(f"Arg hN {hN} does not have a leading h. Adding it...")
   hN = "h"+hN
   print(f"New hN {hN}")


case_path = f"{path}{case}/atm/hist/"

hN_list = sorted(glob(f"{case_path}*{hN}*"))
if (len(hN_list)==0):
   print(f"ERROR: list is empty")
   print(f"       Looking in {case_path}*{hN}*")
else:
   print(f"Found {len(hN_list)} files")


hN_file = hN_list[-1]
hN_file

fname = f"{case}_{hN}_raw_var_list.txt"
os.system(f"ncdump -h {hN_file} | grep float > {fname}")

start="float "
end="("

with open(fname,'r') as file:
    lines = file.readlines()

with open(f'{save_path}{fname.replace("_raw","")}','w') as f:
    for s in lines:
        match = s[s.find(start)+len(start):s.rfind(end)]
        match_format = f"   - {match}"
        print(f"{match_format}")
        f.write(f"{match_format}\n")
os.remove(fname)


newname = f'{fname.replace("_raw","")}'
print(f"Wrote output to {save_path}{newname}")
